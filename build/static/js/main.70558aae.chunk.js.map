{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","Robots","map","user","i","Searchbox","searchfield","searchchange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onsearchchange","Event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAiBeA,EAfH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACvB,OACI,sBACAC,UACA,wDAFA,UAGI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACtB,gCACE,6BAAKF,IACL,4BAAIC,WCWDK,EAlBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACd,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GAC1B,OAAS,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMVC,EAbE,SAAC,GAAiC,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAW,mCACXW,KAAK,SACJC,YAAY,gBACZC,SAAUH,OCKJI,EAZF,SAACC,GACV,OACI,qBACQC,MACC,CAACC,UAAW,SACbC,OAAS,kBACRC,OAAQ,SAJjB,SAKUJ,EAAMK,YCyCTC,E,kDA1CP,aAAc,IAAD,8BACL,gBAcgBC,eAAe,SAACC,GACR,EAAKC,SAAS,CAACf,YAAYc,EAAME,OAAOC,SAdhE,EAAKC,MAAM,CACHvB,OAAQ,GACRK,YAAa,IAJhB,E,qDAQL,WAAoB,IAAD,OACXmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAK,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBAOvC,WAAU,IAAD,OACKC,EAAeC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC9C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAEzE,OAAgC,IAA5BF,KAAKP,MAAMvB,OAAOkC,OACP,yCAGf,sBACgBtC,UAAU,KAD1B,UAEgB,6CACA,cAAC,EAAD,CAAYU,aAAcwB,KAAKZ,iBAC/B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAhCxCM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.70558aae.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =({name, email, id})=>{\r\n    return (\r\n        <div \r\n        className= \r\n        'tc bg-light-green dib br3 pa3 ma2 grow bw5 shadow-100'>\r\n            <img alt=\"robot\" src={`https://robohash.org/${id}?100x100`}/>\r\n          <div >\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Card;","import react from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({Robots})=>{\r\n    return(\r\n        <div>\r\n            {\r\n                Robots.map((user,i)=>{\r\n       return ( <Card\r\n                    key={i}\r\n                    id={Robots[i].id} \r\n                    name={Robots[i].name} \r\n                    email={Robots[i].email}\r\n                    />\r\n                    );\r\n                })\r\n            }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import react from 'react';\r\n\r\nconst Searchbox =(  {searchfield, searchchange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n        <input \r\n        className ='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n         placeholder=\"search robots\" \r\n         onChange={searchchange}\r\n         />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import  react from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return (\r\n        <div \r\n                style=\r\n                {{overflowY: 'Scroll',\r\n                border : '5px solid black',\r\n                 height: '800px'}}>\r\n                 {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import react, { Component }   from 'react';\r\nimport CardList from './components/CardList';\r\nimport Searchbox from './components/Searchbox';\r\nimport Scroll from './components/Scroll'\r\n\r\n\r\n\r\nclass App extends Component{\r\n        constructor(){\r\n                super()\r\n                this.state={\r\n                        Robots: [],\r\n                        searchfield: ''\r\n                         }\r\n                }\r\n\r\n                componentDidMount(){\r\n                        fetch('https://jsonplaceholder.typicode.com/users')\r\n                        .then(response=>  response.json())\r\n                        .then(users =>  this.setState({Robots: users}))\r\n                }\r\n\r\n\r\n                                onsearchchange=(Event) =>{\r\n                                        this.setState({searchfield:Event.target.value})\r\n                                }\r\n                        render() {\r\n                                const filteredRobots=this.state.Robots.filter(Robots=>{\r\n                                return Robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n                        })\r\n                        if (this.state.Robots.length ===0) {\r\n                                return <h1>loading</h1>\r\n                        }else{\r\n                                 return (\r\n                        <div \r\n                                        className=\"tc\">\r\n                                        <h1>ROBOFRIENDS</h1>\r\n                                        <Searchbox  searchchange={this.onsearchchange}/>\r\n                                        <Scroll>\r\n                                        <CardList Robots={filteredRobots} />\r\n                                        </Scroll>\r\n                          </div>\r\n                                        );      \r\n                                 }\r\n                        }\r\n                 }\r\n\r\n       \r\n            \r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <App/>\n     </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}